# use https://editor-next.swagger.io/ to validate this file
openapi: 3.0.4
info:
  title: Akka Cache
  description: |-
    Akka Cache ia a high speed, globally elastic, multi-region distributed key-value cache built upon Akka 3.
  contact:
    email: support@akka.io
  license:
    name: Business Source License 1.1
    url: https://github.com/akka-cache/akka-cache/blob/main/LICENSE
  version: 0.1.0
# probably need to comment out servers below when generating
servers: [ { url: http://localhost:9001 } ]
tags:
  - name: cacheName
    description: APIs used to maintain a cache name, namespace, or group.
    externalDocs:
      description: Find out more about cacheNames
      url: TBD
  - name: cache
    description: APIs used to create, retrieve, and delete cached objects.
    externalDocs:
      description: Find out more about caches.
      url: TBD
  - name: batch
    description: Batch APIs used to create, retrieve, and delete cached objects in a batch fashion.
    externalDocs:
      description: Find out more about the batched APIs
      url: TBD
security:
  - JWT: []
paths:
  # cacheName APIs START here
  /cacheName:
    post:
      tags:
        - cacheName
      summary: Create or update a cache namespace description.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cacheNameCreate'
      responses:
        "201":
          description: (created) Successfully created or updated.
        "400":
          description: Bad Request
    put:
      tags:
        - cacheName
      summary: Create or update a cache namespace description.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cacheNameCreate'
      responses:
        "202":
          description: "(accepted) Successfully created or updated."
        "400":
          description: Bad Request
  /cacheName/{cacheName}:
    parameters:
      - $ref: '#/components/parameters/cacheNameParam'
    get:
      tags:
        - cacheName
      summary: Get the specified cache name description, and delete status.
      responses:
        "200":
          description: returned a JSON format of the cache namespace, and description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cacheNameResponse'
        "400":
          description: bad request or doesn't exist
    delete:
      tags:
        - cacheName
      summary: Deletes the current cache namespace and all associated caches.
      responses:
        "202":
          description: (accepted) deleted
        "400":
          description: Bad Request
  /cacheName/list:
    get:
      tags:
        - cacheName
      summary:
        Retrieves a list of cacheNames and optional description.
      responses:
        "200":
          description: Returns a JSON format array of the cache namespaces, and description.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cacheNameListResponse'
        "400":
          description: Bad Request
  /cacheName/{cacheName}/keys:
    parameters:
      - $ref: '#/components/parameters/cacheNameParam'
    get:
      tags:
        - cacheName
      summary: Get the current cache namespace's list of cache keys.
      responses:
        "200":
          description: returns a JSON format array of cache keys.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cacheNameKeys'
        "400":
          description: bad request or doesn't exist
  /cacheName/{cacheName}/flush:
    parameters:
      - $ref: '#/components/parameters/cacheNameParam'
    put:
      tags:
        - cacheName
      summary: Deletes all existing cached objects but leaves the cache namespace in place.
      responses:
        "202":
          description: accepted
        "400":
          description: bad request or doesn't exist
  # cacheName APIs END here
  # cacheName / cache specific APIs START here
  /{cacheName}/{key}:
    parameters:
      - $ref: '#/components/parameters/cacheNameParam'
      - $ref: '#/components/parameters/keyParam'
    post:
      tags:
        - cache
      summary: |-
        Create or update a cached object under the cacheName. Note: this is a binary version of the API and requires that the cache object be passed in the request body. 
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/byteArray'
      responses:
        "201":
          description: (created) Successfully created or updated.
        "400":
          description: bad request or potentially exceeded maximum cached bytes allowed
    delete:
      tags:
        - cache
      summary: Deletes the currently cached object by key within the given cacheName.
      responses:
        "202":
          description: (accepted) deleted
        "400":
          description: Bad Request
    get:
      tags:
        - cache
      summary: |-
        Retrieves the currently cached object by key within the given cacheName. Note: this is a binary version of the API and requires that the cache object be passed in the request body.
      responses:
        "200":
          description: Okay
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/byteArray'
        "404":
          description: Not Found
        "400":
          description: Bad Request
  /{cacheName}/{key}/{ttlSeconds}:
    parameters:
      - $ref: '#/components/parameters/cacheNameParam'
      - $ref: '#/components/parameters/keyParam'
      - $ref: '#/components/parameters/ttlSecondsParam'
    post:
      tags:
        - cache
      summary: |- 
        Create or update a cached object by key within the given cacheName. Note: this is a binary version of the API and requires that the cache object be passed in the request body.
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/byteArray'
      responses:
        "201":
          description: (created) Successfully created or updated.
        "400":
          description: Bad Request or potentially exceeded maximum cached bytes allowed
  /set:
    post:
      tags:
        - cache
      summary: Create or update a cached object (BASE64 encoded) by key within the given cacheName.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cacheRequest'
      responses:
        "201":
          description: (created) Successfully created or updated.
        "400":
          description: Bad Request or, Invalid cacheRequest, or potentially exceeded maximum cached bytes allowed.
  # cacheName / cache specific APIs END here
  /get/{cacheName}/{key}:
    parameters:
      - $ref: '#/components/parameters/cacheNameParam'
      - $ref: '#/components/parameters/keyParam'
    get:
      tags:
        - cache
      summary: Get the current cache namespace description, and delete status.
      responses:
        "200":
          description: Returns a JSON format of the cache namespace, and description.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cacheGetResponse'
        "400":
          description: Bad Request
  /batch:
    post:
      tags:
        - batch
      summary: Create batch of cached objects, results are returned for each batched element.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/batchCacheRequest'
      responses:
        "200":
          description: returns a JSON formated object of each cached result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/batchCacheResponse'
        "400":
          description: Bad Request
    delete:
      tags:
        - batch
      summary: Deletes a batch of individually cached objects.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/batchGetCacheRequests'
      responses:
        "200":
          description: Returned a JSON formated object of all cached results.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/batchDeleteCacheResponse'
        "400":
          description: Bad Request
  /batch/get:
    post:
      tags:
        - batch
      summary: Retrieve a batch of cached objects.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/batchGetCacheRequests'
      responses:
        "200":
          description: Returns a JSON formated object of all cached results.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/batchGetCacheResponse'
        "400":
          description: Bad Request
components:
  securitySchemes:
    JWT:
      description: Bearer token using a JWT
      type: http
      scheme: Bearer
      bearerFormat: JWT
  parameters:
    cacheNameParam:
      description: Name of a cache namespace. (group)
      name: cacheName
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/cacheName'
    keyParam:
      description: The key of a specific cache object within a cacheName.
      name: key
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/key'
    ttlSecondsParam:
      description: Time to Live (TTL) of the cached object before being automatically deleted.
      name: ttlSeconds
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ttlSeconds'
  schemas:
    cacheName:
      type: string
      description: Name of a cache namespace (group).
    description:
      type: string
      description: Description of a cache name.
    deleted:
      type: boolean
      description: False if not deleted.
    cacheNameCreate:
      type: object
      description: A JSON object use to create a cacheName namespace.
      required:
        - cacheName
      properties:
        cacheName:
          type: string
        description:
          type: string
    cacheNameResponse:
      type: object
      required:
        - cacheName
        - description
        - deleted
      description: The complete cacheName object.
      properties:
        cacheName:
          type: string
        description:
          type: string
        deleted:
          type: boolean
    cacheNameListResponse:
      type: object
      properties:
        cacheNameList:
          type: array
          items:
            type: object
            description: An array of all known cacheNames, along with an optional description.
            required:
              - cacheName
            properties:
              cacheName:
                type: string
              description:
                type: string
    cacheNameKeys:
      type: array
      description: An array of all known keys under the given cacheName.
      items:
        type: string
    key:
      type: string
      description: Unique key to the cache within the cacheName.
    ttlSeconds:
      type: integer
      description: Time to Live of the cached object.
    byteArray:
      type: string
      description: This is an array of bytes (byte[]) (not encoded)
      format: binary # "byte" appears to be BASE64 encoded
    cacheRequest:
      type: object
      description: A JSON request object where the object is provided as a BASE64 encoded value.
      required:
        - cacheName
        - key
        - value
      properties:
        cacheName:
          type: string
        key:
          type: string
        ttlSeconds:
          type: integer
        value: # byte[]
          type: string
          format: byte
    cacheGetResponse:
      type: object
      description: The cached JSON object returned as a BASE64 encoded value.
      required:
        - cacheName
        - key
        - success
        - value
      properties:
        cacheName:
          type: string
        key:
          type: string
        success:
          type: boolean
        value: # byte[]
          type: string
          format: byte
    batchCacheRequest:
        type: object
        properties:
          cacheRequests:
            type: array
            items:
              $ref: '#/components/schemas/cacheRequest'
    batchCacheResult:
      type: object
      description: A JSON based array of results for each batched cache request.
      required:
        - cacheName
        - key
        - success
      properties:
        cacheName:
          type: string
        key:
          type: string
        success:
          type: boolean
    batchCacheResponse:
      type: object
      description: A JSON wrapped array of batched cache results.
      properties:
        complete:
          type: boolean
        results:
          type: array
          items:
            type: object
            description: A JSON array of batched cache results.
            required:
              - cacheName
              - key
              - success
            properties:
              cacheName:
                type: string
              key:
                type: string
              success:
                type: boolean
    batchGetCacheRequest:
      type: object
      description: A cashName/key value pair of a cached object to retrieve.
      required:
        - cacheName
        - key
      properties:
        cacheName:
          type: string
        key:
          type: string
    batchGetCacheRequests:
      type: object
      properties:
        getCachedBatch:
          type: array
          items:
            $ref: '#/components/schemas/batchGetCacheRequest'
    cacheDeleteResponse:
      type: object
      description: A JSON response of the cache delete request.
      required:
        - cacheName
        - key
        - success
      properties:
        cacheName:
          type: string
        key:
          type: string
        success:
          type: boolean
    batchDeleteCacheResponse:
      type: object
      properties:
        cacheDeleteResponses:
          type: array
          description: A JSON wrapped array of batched delete cache results.
          items:
            $ref: '#/components/schemas/cacheDeleteResponse'
    batchGetCacheResponse:
      type: object
      description: A JSON wrapped array of batched get cache results.
      properties:
        complete:
          type: boolean
        results:
          type: array
          items:
            type: object
            description: |-
              A JSON response containing the list of cached objects retrieved. Note: each object is encoded as a BASE64 encoded value.
            required:
              - cacheName
              - key
              - success
              - value
            properties:
              cacheName:
                type: string
              key:
                type: string
              success:
                type: boolean
              value: # byte[]
                type: string
                format: byte