name: akka_deploy

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Install Akka CLI
        uses: akka/setup-akka-cli-action@v1
        with:
          token: ${{ secrets.AKKA_TOKEN }}
          project-id: 82fe1394-216c-46c2-9223-0b2909b081e0
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build with Maven
        run: mvn clean install | tee build.log
      - name: Extract Docker tag
        id: extract_tag
        run: |
          # Search for the line containing DOCKER> Tagging image akka-cache
          # Example line: DOCKER> Tagging image akka-cache:1.0-SNAPSHOT-20241220045359 successful!
          # We'll extract "akka-cache:1.0-SNAPSHOT-20241220045359"
          IMAGE_TAG=$(grep "DOCKER> Tagging image akka-cache:" build.log | sed -E 's/.*DOCKER> Tagging image (akka-cache:[^ ]+) .*/\1/')
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Deploy service
        run: akka service deploy akka-cache ${{ steps.extract_tag.outputs.IMAGE_TAG }} --push

      - name: Log in to Docker registry
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login hub.akka.io -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Publish to Cloudsmith
        run: |
          docker tag ${{ steps.extract_tag.outputs.IMAGE_TAG }} hub.akka.io/${{ steps.extract_tag.outputs.IMAGE_TAG }}
          docker push hub.akka.io/${{ steps.extract_tag.outputs.IMAGE_TAG }}
      
